<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="t_user_info" >
  <resultMap id="abatorgenerated_TUserInfoResult" class="com.itest.entity.UserInf" >
    <result column="uuid" property="uuid" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="TINYINT" />
    <result column="city" property="city" jdbcType="TINYINT" />
    <result column="region" property="region" jdbcType="TINYINT" />
    <result column="sex" property="sex" jdbcType="SMALLINT" />
    <result column="birthday_time" property="birthdayTime" jdbcType="DATE" />
    <result column="height" property="height" jdbcType="TINYINT" />
    <result column="weight" property="weight" jdbcType="TINYINT" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="professional" property="professional" jdbcType="TINYINT" />
    <result column="salary" property="salary" jdbcType="TINYINT" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="total_coin" property="totalCoin" jdbcType="INTEGER" />
    <result column="freeze_coin" property="freezeCoin" jdbcType="INTEGER" />
    <result column="posi_longitude" property="posiLongitude" jdbcType="DOUBLE" />
    <result column="posi_latitude" property="posiLatitude" jdbcType="DOUBLE" />
    <result column="posi_height" property="posiHeight" jdbcType="INTEGER" />
    <result column="online_status" property="onlineStatus" jdbcType="TINYINT" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="session_id" property="sessionId" jdbcType="VARCHAR" />
    <result column="login_source" property="loginSource" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="posi_status" property="posiStatus" jdbcType="BIT" />
    <result column="data_full" property="dataFull" jdbcType="BIT" />
    <result column="status" property="status" jdbcType="BIT" />
  </resultMap>
  <sql id="abatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="abatorgenerated_selectByPrimaryKey" resultMap="abatorgenerated_TUserInfoResult" parameterClass="java.lang.Integer" >
    select uuid, account, password, email, nickname, province, city, region, sex, birthday_time,
      height, weight, summary, professional, salary, company, total_coin, freeze_coin,
      posi_longitude, posi_latitude, posi_height, online_status, last_login_time, session_id,
      login_source, create_time, posi_status, data_full, status
    from t_user_info
    where uuid = #uuid:INTEGER#
  </select>
  <select id="getAccount" resultClass="java.lang.String" parameterClass="java.lang.Integer" >
    select account from t_user_info where uuid = #uuid:INTEGER#
  </select>
  <select id="abatorgenerated_selectByExample" resultMap="abatorgenerated_TUserInfoResult" parameterClass="com.itest.entity.UserInfExample" >
    select uuid, account, password, email, nickname, province, city, region, sex, birthday_time,
      height, weight, summary, professional, salary, company, total_coin, freeze_coin,
      posi_longitude, posi_latitude, posi_height, online_status, last_login_time, session_id,
      login_source, create_time, posi_status, data_full, status
    from t_user_info
    <isParameterPresent >
      <include refid="t_user_info.abatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <delete id="abatorgenerated_deleteByPrimaryKey" parameterClass="com.itest.entity.UserInf" >
    delete from t_user_info
    where uuid = #uuid:INTEGER#
  </delete>
  <delete id="abatorgenerated_deleteByExample" parameterClass="com.itest.entity.UserInfExample" >
    delete from t_user_info
    <include refid="t_user_info.abatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="abatorgenerated_insert" parameterClass="com.itest.entity.UserInf" >
    insert into t_user_info (uuid, account, password, email, nickname, province, city, region, sex,
      birthday_time, height, weight, summary, professional, salary, company, total_coin,
      freeze_coin, posi_longitude, posi_latitude, posi_height, online_status, last_login_time,
      session_id, login_source, create_time, posi_status, data_full, status)
    values (#uuid:INTEGER#, #account:VARCHAR#, #password:VARCHAR#, #email:VARCHAR#,
      #nickname:VARCHAR#, #province:TINYINT#, #city:TINYINT#, #region:TINYINT#, #sex:SMALLINT#,
      #birthdayTime:DATE#, #height:TINYINT#, #weight:TINYINT#, #summary:VARCHAR#,
      #professional:TINYINT#, #salary:TINYINT#, #company:VARCHAR#, #totalCoin:INTEGER#,
      #freezeCoin:INTEGER#, #posiLongitude:DOUBLE#, #posiLatitude:DOUBLE#, #posiHeight:INTEGER#,
      #onlineStatus:TINYINT#, #lastLoginTime:TIMESTAMP#, #sessionId:VARCHAR#, #loginSource:TINYINT#,
      #createTime:TIMESTAMP#, #posiStatus:BIT#, #dataFull:BIT#, #status:BIT#)
  </insert>
  <update id="abatorgenerated_updateByPrimaryKey" parameterClass="com.itest.entity.UserInf" >
    update t_user_info
    set account = #account:VARCHAR#,
      password = #password:VARCHAR#,
      email = #email:VARCHAR#,
      nickname = #nickname:VARCHAR#,
      province = #province:TINYINT#,
      city = #city:TINYINT#,
      region = #region:TINYINT#,
      sex = #sex:SMALLINT#,
      birthday_time = #birthdayTime:DATE#,
      height = #height:TINYINT#,
      weight = #weight:TINYINT#,
      summary = #summary:VARCHAR#,
      professional = #professional:TINYINT#,
      salary = #salary:TINYINT#,
      company = #company:VARCHAR#,
      total_coin = #totalCoin:INTEGER#,
      freeze_coin = #freezeCoin:INTEGER#,
      posi_longitude = #posiLongitude:DOUBLE#,
      posi_latitude = #posiLatitude:DOUBLE#,
      posi_height = #posiHeight:INTEGER#,
      online_status = #onlineStatus:TINYINT#,
      last_login_time = #lastLoginTime:TIMESTAMP#,
      session_id = #sessionId:VARCHAR#,
      login_source = #loginSource:TINYINT#,
      create_time = #createTime:TIMESTAMP#,
      posi_status = #posiStatus:BIT#,
      data_full = #dataFull:BIT#,
      status = #status:BIT#
    where uuid = #uuid:INTEGER#
  </update>
  <update id="abatorgenerated_updateByPrimaryKeySelective" parameterClass="com.itest.entity.UserInf" >
    update t_user_info
    <dynamic prepend="set" >
      <isNotNull prepend="," property="account" >
        account = #account:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="password" >
        password = #password:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="email" >
        email = #email:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="nickname" >
        nickname = #nickname:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="province" >
        province = #province:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="city" >
        city = #city:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="region" >
        region = #region:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="sex" >
        sex = #sex:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="birthdayTime" >
        birthday_time = #birthdayTime:DATE#
      </isNotNull>
      <isNotNull prepend="," property="height" >
        height = #height:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="weight" >
        weight = #weight:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="summary" >
        summary = #summary:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="professional" >
        professional = #professional:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="salary" >
        salary = #salary:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="company" >
        company = #company:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="totalCoin" >
        total_coin = #totalCoin:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="freezeCoin" >
        freeze_coin = #freezeCoin:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="posiLongitude" >
        posi_longitude = #posiLongitude:DOUBLE#
      </isNotNull>
      <isNotNull prepend="," property="posiLatitude" >
        posi_latitude = #posiLatitude:DOUBLE#
      </isNotNull>
      <isNotNull prepend="," property="posiHeight" >
        posi_height = #posiHeight:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="onlineStatus" >
        online_status = #onlineStatus:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="lastLoginTime" >
        last_login_time = #lastLoginTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="sessionId" >
        session_id = #sessionId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="loginSource" >
        login_source = #loginSource:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        create_time = #createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="posiStatus" >
        posi_status = #posiStatus:BIT#
      </isNotNull>
      <isNotNull prepend="," property="dataFull" >
        data_full = #dataFull:BIT#
      </isNotNull>
      <isNotNull prepend="," property="status" >
        status = #status:BIT#
      </isNotNull>
    </dynamic>
    where uuid = #uuid:INTEGER#
  </update>
  <select id="abatorgenerated_countByExample" parameterClass="com.itest.entity.UserInfExample" resultClass="java.lang.Integer" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu May 23 13:30:10 CST 2013.
    -->
    select count(*) from t_user_info
    <include refid="t_user_info.abatorgenerated_Example_Where_Clause" />
  </select>
  <update id="abatorgenerated_updateByExampleSelective" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu May 23 13:30:10 CST 2013.
    -->
    update t_user_info
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.uuid" >
        uuid = #record.uuid:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.account" >
        account = #record.account:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.password" >
        password = #record.password:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.email" >
        email = #record.email:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.nickname" >
        nickname = #record.nickname:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.province" >
        province = #record.province:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.city" >
        city = #record.city:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.region" >
        region = #record.region:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.sex" >
        sex = #record.sex:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="record.birthdayTime" >
        birthday_time = #record.birthdayTime:DATE#
      </isNotNull>
      <isNotNull prepend="," property="record.height" >
        height = #record.height:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.weight" >
        weight = #record.weight:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.summary" >
        summary = #record.summary:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.professional" >
        professional = #record.professional:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.salary" >
        salary = #record.salary:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.company" >
        company = #record.company:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.totalCoin" >
        total_coin = #record.totalCoin:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.freezeCoin" >
        freeze_coin = #record.freezeCoin:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.posiLongitude" >
        posi_longitude = #record.posiLongitude:DOUBLE#
      </isNotNull>
      <isNotNull prepend="," property="record.posiLatitude" >
        posi_latitude = #record.posiLatitude:DOUBLE#
      </isNotNull>
      <isNotNull prepend="," property="record.posiHeight" >
        posi_height = #record.posiHeight:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.onlineStatus" >
        online_status = #record.onlineStatus:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.lastLoginTime" >
        last_login_time = #record.lastLoginTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.sessionId" >
        session_id = #record.sessionId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.loginSource" >
        login_source = #record.loginSource:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.createTime" >
        create_time = #record.createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.posiStatus" >
        posi_status = #record.posiStatus:BIT#
      </isNotNull>
      <isNotNull prepend="," property="record.dataFull" >
        data_full = #record.dataFull:BIT#
      </isNotNull>
      <isNotNull prepend="," property="record.status" >
        status = #record.status:BIT#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="t_user_info.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="abatorgenerated_updateByExample" >
    <!--
      WARNING - This element is automatically generated by Abator for iBATIS, do not modify.
      This element was generated on Thu May 23 13:30:10 CST 2013.
    -->
    update t_user_info
    set uuid = #record.uuid:INTEGER#,
      account = #record.account:VARCHAR#,
      password = #record.password:VARCHAR#,
      email = #record.email:VARCHAR#,
      nickname = #record.nickname:VARCHAR#,
      province = #record.province:TINYINT#,
      city = #record.city:TINYINT#,
      region = #record.region:TINYINT#,
      sex = #record.sex:SMALLINT#,
      birthday_time = #record.birthdayTime:DATE#,
      height = #record.height:TINYINT#,
      weight = #record.weight:TINYINT#,
      summary = #record.summary:VARCHAR#,
      professional = #record.professional:TINYINT#,
      salary = #record.salary:TINYINT#,
      company = #record.company:VARCHAR#,
      total_coin = #record.totalCoin:INTEGER#,
      freeze_coin = #record.freezeCoin:INTEGER#,
      posi_longitude = #record.posiLongitude:DOUBLE#,
      posi_latitude = #record.posiLatitude:DOUBLE#,
      posi_height = #record.posiHeight:INTEGER#,
      online_status = #record.onlineStatus:TINYINT#,
      last_login_time = #record.lastLoginTime:TIMESTAMP#,
      session_id = #record.sessionId:VARCHAR#,
      login_source = #record.loginSource:TINYINT#,
      create_time = #record.createTime:TIMESTAMP#,
      posi_status = #record.posiStatus:BIT#,
      data_full = #record.dataFull:BIT#,
      status = #record.status:BIT#
    <isParameterPresent >
      <include refid="t_user_info.abatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
</sqlMap>